{
  "name": "Predicting Soccer Matches: A Neural Network Approach",
  "tagline": "CS5600 Artifical Intelligence ",
  "body": "### **Introduction**\r\nPredicting the results of sports is a big deal for many people, ranging from casual fans to analysts and sports franchises. Accurately predicting the scores and outcomes of matches not only is important to fans but also to organizers to create fair leagues. The purpose of this project is to implement various neural network approaches in accurately predicting soccer scores in the English Premier League and testing their accuracy.\r\n\r\n### **Problem Description**\r\nSoccer is a highly competitive sport with many factors affecting each game. Given a team dataset, successfully implement and compare different neural networks to accurately predict soccer scores and outcomes using past matches for the EPL and additional features.\r\n\r\n![](http://i.imgur.com/d0SFDgS.png)\r\n\r\nIn the sample data set given, the values of division, Home Team, Away Team, FTHG, FTAG, HS, AS (which are acronyms for different soccer statistics like Full-Time Home Goals, Home shots, etc.) are read into a dictionary. This makes it easier to access a value with some key and extracting the value given the key for the data set.\r\n\r\n\r\n### **Methods**\r\nThe match data was read into a training, validation, and testing sets for classifier algorithms. In the given flow chart below, the raw data from the soccer website was read in and scaled by assigning each value in a dictionary. This was then used to create a training set and validation set to build the experiment. This was done by designating EPL seasons 2000-2009 as the training data set, EPL seasons 2010-2014 as the testing set, and LL seasons 2000-2004 as the validation set. Using statistics from La Liga for the validation set allowed the increase the size of the training set to 10 seasons of EPL data, but considered it best to train a classifier on the same league (EPL) as the testing set.\r\n\r\n![Flow Chart](http://i.imgur.com/wZR2NjS.png)\r\n\r\nThe dictionary values constructed were best suited to machine learning algorithms, and were evaluated with a multinomial naive Bayes classifier, a support vector machine, a perceptron, a stochastic gradient descent model, and a Gaussian naive Bayes classifier\r\n\r\n### **Results**\r\n\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}